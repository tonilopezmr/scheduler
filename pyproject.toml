[tool.poetry]
name = "Scheduler"
version = "0.1"
description = "Code test for Element"
authors = ["tonilopezmr"]
license = "Apache License"
readme = "README.md"
packages = [{include = "scheduler"}]

[tool.poetry.scripts]
schedsuler = "scheduler.cli:main"

[tool.poetry.dependencies]
python = "^3.8, <3.11"
attrs = "21.4.0"
idna = "3.3"
iniconfig = "1.1.1"
packaging = "21.3"
py = "1.11.0"
pyparsing = "3.0.9"

[tool.poetry.dev-dependencies]
nox-poetry = "*"

# Testing.
pytest = "*"
pytest-cov = "*"

# Type Checking.
mypy = "*"

# Linting.
flake8 = "*"
flake8-bugbear = "*"
flake8-broken-line = "*"
flake8-comprehensions = "*"
pep8-naming = "*"
# TODO: Remove this when flake8 adds native support for pyproject.toml.
pyproject-flake8 = "*"

# Formatting.
black = "*"
isort = "*"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
ignore_missing_imports = true
strict = true
# If certain strict config options are too pedantic for a project,
# disable them selectively here by setting to false.

# Note: This configuration is supported by pyproject-flake8.
[tool.flake8]
# Use the more relaxed max line length permitted in PEP 8.
max-line-length = 99
# This ignore is required by black.
extend-ignore = ["E203"]
# flake8-bugbear config.
# TODO: Remove this once flake8 > 4.0.1 is released as this has been fixed
#   upstream: https://github.com/PyCQA/flake8/pull/1443
extend-exclude = [".nox", ".env"]

[tool.black]
line-length = 99
target-version = ["py38", "py39", "py310"]

[tool.isort]
profile = "black"
line_length = 99
force_sort_within_sections = true
# Inform isort of paths to import names that should be considered part of the "First Party" group.
src_paths = ["tests", "scheduler"]
skip_gitignore = true

[tool.pytest.ini_options]
filterwarnings = [
    # When running tests, treat warnings as errors (e.g. -Werror).
    # See: https://docs.pytest.org/en/latest/reference/reference.html#confval-filterwarnings
    "error",  
]
log_cli = 1

[tool.coverage.run]
branch = true